{
  "id": "${artifactId}-${version}",
  "name": "Circulation Module",
  "provides": [
    {
      "id": "circulation",
      "version": "6.0",
      "handlers": [
        {
          "methods": [
            "POST"
          ],
          "pathPattern": "/circulation/check-out-by-barcode",
          "permissionsRequired": [
            "circulation.check-out-by-barcode.post"
          ],
          "modulePermissions": [
            "circulation-storage.loans.item.post",
            "calendar.collection.get",
            "calendar.collection.add",
            "circulation-storage.loans.item.get",
            "circulation-storage.loans.collection.get",
            "circulation.rules.loan-policy.get",
            "circulation-storage.requests.collection.get",
            "circulation-storage.requests.item.put",
            "inventory-storage.items.item.put",
            "inventory-storage.items.item.get",
            "inventory-storage.items.collection.get",
            "inventory-storage.locations.item.get",
            "inventory-storage.locations.collection.get",
            "inventory-storage.holdings.collection.get",
            "inventory-storage.holdings.item.get",
            "inventory-storage.instances.collection.get",
            "inventory-storage.instances.item.get",
            "inventory-storage.service-points.collection.get",
            "inventory-storage.service-points.item.get",
            "users.item.get",
            "proxiesfor.collection.get",
            "inventory-storage.material-types.item.get",
            "inventory-storage.material-types.collection.get",
            "circulation-storage.loan-policies.item.get",
            "circulation-storage.fixed-due-date-schedules.item.get",
            "circulation-storage.fixed-due-date-schedules.collection.get"
          ]
        },
        {
          "methods": [
            "POST"
          ],
          "pathPattern": "/circulation/check-in-by-barcode",
          "permissionsRequired": [
            "circulation.check-in-by-barcode.post"
          ],
          "modulePermissions": [
            "circulation-storage.loans.item.put",
            "circulation-storage.loans.item.get",
            "circulation-storage.loans.collection.get",
            "circulation.rules.loan-policy.get",
            "circulation-storage.requests.collection.get",
            "circulation-storage.requests.item.put",
            "inventory-storage.items.item.put",
            "inventory-storage.items.item.get",
            "inventory-storage.items.collection.get",
            "inventory-storage.locations.item.get",
            "inventory-storage.locations.collection.get",
            "inventory-storage.holdings.collection.get",
            "inventory-storage.holdings.item.get",
            "inventory-storage.instances.collection.get",
            "inventory-storage.instances.item.get",
            "inventory-storage.material-types.item.get",
            "inventory-storage.material-types.collection.get",
            "inventory-storage.service-points.collection.get",
            "inventory-storage.service-points.item.get",
            "users.item.get",
            "users.collection.get",
            "proxiesfor.collection.get",
            "circulation-storage.loan-policies.item.get",
            "circulation-storage.fixed-due-date-schedules.item.get",
            "circulation-storage.fixed-due-date-schedules.collection.get"
          ]
        },
        {
          "methods": [
            "POST"
          ],
          "pathPattern": "/circulation/renew-by-barcode",
          "permissionsRequired": [
            "circulation.renew-by-barcode.post"
          ],
          "modulePermissions": [
            "circulation-storage.loans.item.put",
            "circulation-storage.loans.item.get",
            "circulation-storage.loans.collection.get",
            "circulation.rules.loan-policy.get",
            "circulation-storage.requests.collection.get",
            "circulation-storage.requests.item.put",
            "inventory-storage.items.item.put",
            "inventory-storage.items.item.get",
            "inventory-storage.items.collection.get",
            "inventory-storage.locations.item.get",
            "inventory-storage.locations.collection.get",
            "inventory-storage.holdings.collection.get",
            "inventory-storage.holdings.item.get",
            "inventory-storage.instances.collection.get",
            "inventory-storage.instances.item.get",
            "inventory-storage.material-types.item.get",
            "inventory-storage.material-types.collection.get",
            "inventory-storage.service-points.collection.get",
            "inventory-storage.service-points.item.get",
            "users.item.get",
            "users.collection.get",
            "proxiesfor.collection.get",
            "circulation-storage.loan-policies.item.get",
            "circulation-storage.fixed-due-date-schedules.item.get",
            "circulation-storage.fixed-due-date-schedules.collection.get"
          ]
        },
        {
          "methods": [
            "POST"
          ],
          "pathPattern": "/circulation/override-renewal-by-barcode",
          "permissionsRequired": [
            "circulation.override-renewal-by-barcode.post"
          ],
          "modulePermissions": [
            "circulation-storage.loans.item.put",
            "circulation-storage.loans.item.get",
            "circulation-storage.loans.collection.get",
            "circulation.rules.loan-policy.get",
            "circulation-storage.requests.collection.get",
            "circulation-storage.requests.item.put",
            "inventory-storage.items.item.put",
            "inventory-storage.items.item.get",
            "inventory-storage.items.collection.get",
            "inventory-storage.locations.item.get",
            "inventory-storage.locations.collection.get",
            "inventory-storage.holdings.collection.get",
            "inventory-storage.holdings.item.get",
            "inventory-storage.instances.collection.get",
            "inventory-storage.instances.item.get",
            "inventory-storage.material-types.item.get",
            "inventory-storage.material-types.collection.get",
            "inventory-storage.service-points.collection.get",
            "inventory-storage.service-points.item.get",
            "users.item.get",
            "users.collection.get",
            "proxiesfor.collection.get",
            "circulation-storage.loan-policies.item.get",
            "circulation-storage.fixed-due-date-schedules.item.get",
            "circulation-storage.fixed-due-date-schedules.collection.get"
          ]
        },
        {
          "methods": [
            "POST"
          ],
          "pathPattern": "/circulation/renew-by-id",
          "permissionsRequired": [
            "circulation.renew-by-id.post"
          ],
          "modulePermissions": [
            "circulation-storage.loans.item.put",
            "circulation-storage.loans.item.get",
            "circulation-storage.loans.collection.get",
            "circulation.rules.loan-policy.get",
            "circulation-storage.requests.collection.get",
            "circulation-storage.requests.item.put",
            "inventory-storage.items.item.put",
            "inventory-storage.items.item.get",
            "inventory-storage.items.collection.get",
            "inventory-storage.locations.item.get",
            "inventory-storage.locations.collection.get",
            "inventory-storage.holdings.collection.get",
            "inventory-storage.holdings.item.get",
            "inventory-storage.instances.collection.get",
            "inventory-storage.instances.item.get",
            "inventory-storage.material-types.item.get",
            "inventory-storage.material-types.collection.get",
            "inventory-storage.service-points.collection.get",
            "inventory-storage.service-points.item.get",
            "users.item.get",
            "users.collection.get",
            "proxiesfor.collection.get",
            "circulation-storage.loan-policies.item.get",
            "circulation-storage.fixed-due-date-schedules.item.get",
            "circulation-storage.fixed-due-date-schedules.collection.get"
          ]
        },
        {
          "methods": [
            "GET"
          ],
          "pathPattern": "/circulation/loans",
          "permissionsRequired": [
            "circulation.loans.collection.get"
          ],
          "modulePermissions": [
            "circulation-storage.loans.collection.get",
            "inventory-storage.items.item.get",
            "inventory-storage.items.collection.get",
            "inventory-storage.locations.item.get",
            "inventory-storage.locations.collection.get",
            "inventory-storage.holdings.collection.get",
            "inventory-storage.holdings.item.get",
            "inventory-storage.instances.collection.get",
            "inventory-storage.instances.item.get",
            "inventory-storage.material-types.collection.get",
            "inventory-storage.material-types.item.get",
            "inventory-storage.service-points.collection.get",
            "inventory-storage.service-points.item.get",
            "users.collection.get",
            "users.item.get"
          ]
        },
        {
          "methods": [
            "POST"
          ],
          "pathPattern": "/circulation/loans",
          "permissionsRequired": [
            "circulation.loans.item.post"
          ],
          "modulePermissions": [
            "circulation-storage.loans.item.post",
            "circulation-storage.loans.item.get",
            "circulation-storage.loans.collection.get",
            "circulation.rules.loan-policy.get",
            "circulation-storage.requests.collection.get",
            "circulation-storage.requests.item.put",
            "inventory-storage.items.item.put",
            "inventory-storage.items.item.get",
            "inventory-storage.items.collection.get",
            "inventory-storage.locations.item.get",
            "inventory-storage.locations.collection.get",
            "inventory-storage.holdings.collection.get",
            "inventory-storage.holdings.item.get",
            "inventory-storage.instances.collection.get",
            "inventory-storage.instances.item.get",
            "inventory-storage.material-types.collection.get",
            "inventory-storage.material-types.item.get",
            "inventory-storage.service-points.collection.get",
            "inventory-storage.service-points.item.get",
            "users.item.get",
            "proxiesfor.collection.get",
            "inventory-storage.material-types.item.get",
            "circulation-storage.loan-policies.item.get",
            "circulation-storage.fixed-due-date-schedules.item.get",
            "circulation-storage.fixed-due-date-schedules.collection.get"
          ]
        },
        {
          "methods": [
            "DELETE"
          ],
          "pathPattern": "/circulation/loans",
          "permissionsRequired": [
            "circulation.loans.collection.delete"
          ],
          "modulePermissions": [
            "circulation-storage.loans.collection.delete"
          ]
        },
        {
          "methods": [
            "GET"
          ],
          "pathPattern": "/circulation/loans/{id}",
          "permissionsRequired": [
            "circulation.loans.item.get"
          ],
          "modulePermissions": [
            "circulation-storage.loans.item.get",
            "inventory-storage.items.item.get",
            "inventory-storage.items.collection.get",
            "inventory-storage.locations.item.get",
            "inventory-storage.locations.collection.get",
            "inventory-storage.holdings.collection.get",
            "inventory-storage.holdings.item.get",
            "inventory-storage.instances.collection.get",
            "inventory-storage.instances.item.get",
            "inventory-storage.material-types.collection.get",
            "inventory-storage.material-types.item.get",
            "inventory-storage.service-points.collection.get",
            "inventory-storage.service-points.item.get"
          ]
        },
        {
          "methods": [
            "PUT"
          ],
          "pathPattern": "/circulation/loans/{id}",
          "permissionsRequired": [
            "circulation.loans.item.put"
          ],
          "modulePermissions": [
            "circulation-storage.loans.item.put",
            "circulation-storage.loans.collection.get",
            "circulation.rules.loan-policy.get",
            "circulation-storage.requests.item.put",
            "circulation-storage.requests.collection.get",
            "inventory-storage.items.item.get",
            "inventory-storage.items.item.put",
            "inventory-storage.items.collection.get",
            "inventory-storage.locations.item.get",
            "inventory-storage.locations.collection.get",
            "inventory-storage.holdings.collection.get",
            "inventory-storage.holdings.item.get",
            "inventory-storage.instances.collection.get",
            "inventory-storage.instances.item.get",
            "inventory-storage.service-points.collection.get",
            "inventory-storage.service-points.item.get",
            "proxiesfor.collection.get",
            "users.item.get",
            "proxiesfor.collection.get",
            "inventory-storage.material-types.item.get",
            "circulation-storage.loan-policies.item.get",
            "circulation-storage.fixed-due-date-schedules.item.get"
          ]
        },
        {
          "methods": [
            "DELETE"
          ],
          "pathPattern": "/circulation/loans/{id}",
          "permissionsRequired": [
            "circulation.loans.item.delete"
          ],
          "modulePermissions": [
            "circulation-storage.loans.item.delete"
          ]
        },
        {
          "methods": [
            "GET"
          ],
          "pathPattern": "/circulation/rules",
          "permissionsRequired": [
            "circulation.rules.get"
          ],
          "modulePermissions": [
            "circulation-storage.circulation-rules.get"
          ]
        },
        {
          "methods": [
            "PUT"
          ],
          "pathPattern": "/circulation/rules",
          "permissionsRequired": [
            "circulation.rules.put"
          ],
          "modulePermissions": [
            "circulation-storage.circulation-rules.put"
          ]
        },
        {
          "methods": [
            "GET"
          ],
          "pathPattern": "/circulation/rules/loan-policy",
          "permissionsRequired": [
            "circulation.rules.loan-policy.get"
          ],
          "modulePermissions": [
            "circulation-storage.circulation-rules.get"
          ]
        },
        {
          "methods": [
            "GET"
          ],
          "pathPattern": "/circulation/rules/loan-policy-all",
          "permissionsRequired": [
            "circulation.rules.loan-policy-all.get"
          ],
          "modulePermissions": [
            "circulation-storage.circulation-rules.get"
          ]
        },
        {
          "methods": [
            "GET"
          ],
          "pathPattern": "/circulation/requests",
          "permissionsRequired": [
            "circulation.requests.collection.get"
          ],
          "modulePermissions": [
            "circulation-storage.requests.item.get",
            "circulation-storage.requests.collection.get",
            "circulation-storage.loans.collection.get",
            "circulation-storage.loans.item.get",
            "inventory-storage.items.collection.get",
            "inventory-storage.items.item.get",
            "inventory-storage.holdings.collection.get",
            "inventory-storage.holdings.item.get",
            "inventory-storage.instances.collection.get",
            "inventory-storage.instances.item.get",
            "inventory-storage.locations.collection.get",
            "inventory-storage.locations.item.get",
            "inventory-storage.service-points.collection.get",
            "inventory-storage.service-points.item.get",
            "users.item.get",
            "users.collection.get",
            "usergroups.collection.get",
            "usergroups.item.get"
          ]
        },
        {
          "methods": [
            "POST"
          ],
          "pathPattern": "/circulation/requests",
          "permissionsRequired": [
            "circulation.requests.item.post"
          ],
          "modulePermissions": [
            "circulation-storage.requests.item.post",
            "inventory-storage.items.item.put",
            "circulation-storage.requests.collection.get",
            "circulation-storage.requests.item.get",
            "circulation-storage.loans.item.put",
            "circulation-storage.loans.collection.get",
            "inventory-storage.items.item.get",
            "inventory-storage.items.collection.get",
            "inventory-storage.holdings.collection.get",
            "inventory-storage.holdings.item.get",
            "inventory-storage.instances.collection.get",
            "inventory-storage.instances.item.get",
            "inventory-storage.locations.collection.get",
            "inventory-storage.locations.item.get",
            "inventory-storage.service-points.collection.get",
            "inventory-storage.service-points.item.get",
            "users.item.get",
            "users.collection.get",
            "usergroups.collection.get",
            "usergroups.item.get",
            "proxiesfor.collection.get"
          ]
        },
        {
          "methods": [
            "DELETE"
          ],
          "pathPattern": "/circulation/requests",
          "permissionsRequired": [
            "circulation.requests.collection.delete"
          ],
          "modulePermissions": [
            "circulation-storage.requests.collection.delete"
          ]
        },
        {
          "methods": [
            "GET"
          ],
          "pathPattern": "/circulation/requests/{id}",
          "permissionsRequired": [
            "circulation.requests.item.get"
          ],
          "modulePermissions": [
            "circulation-storage.requests.item.get",
            "circulation-storage.requests.collection.get",
            "circulation-storage.loans.collection.get",
            "circulation-storage.loans.item.get",
            "inventory-storage.items.collection.get",
            "inventory-storage.items.item.get",
            "inventory-storage.holdings.collection.get",
            "inventory-storage.holdings.item.get",
            "inventory-storage.instances.collection.get",
            "inventory-storage.instances.item.get",
            "inventory-storage.locations.collection.get",
            "inventory-storage.locations.item.get",
            "inventory-storage.service-points.collection.get",
            "inventory-storage.service-points.item.get",
            "users.item.get",
            "users.collection.get",
            "usergroups.collection.get",
            "usergroups.item.get"
          ]
        },
        {
          "methods": [
            "PUT"
          ],
          "pathPattern": "/circulation/requests/{id}",
          "permissionsRequired": [
            "circulation.requests.item.put"
          ],
          "modulePermissions": [
            "circulation-storage.requests.item.put",
            "circulation-storage.requests.item.post",
            "inventory-storage.items.item.put",
            "circulation-storage.requests.collection.get",
            "circulation-storage.requests.item.get",
            "circulation-storage.loans.item.put",
            "circulation-storage.loans.collection.get",
            "inventory-storage.items.item.get",
            "inventory-storage.items.collection.get",
            "inventory-storage.holdings.collection.get",
            "inventory-storage.holdings.item.get",
            "inventory-storage.instances.collection.get",
            "inventory-storage.instances.item.get",
            "inventory-storage.locations.collection.get",
            "inventory-storage.locations.item.get",
            "inventory-storage.service-points.collection.get",
            "inventory-storage.service-points.item.get",
            "users.item.get",
            "users.collection.get",
            "usergroups.collection.get",
            "usergroups.item.get",
            "proxiesfor.collection.get"
          ]
        },
        {
          "methods": [
            "DELETE"
          ],
          "pathPattern": "/circulation/requests/{id}",
          "permissionsRequired": [
            "circulation.requests.item.delete"
          ],
          "modulePermissions": [
            "circulation-storage.requests.item.delete"
          ]
        },
        {
          "methods": [
            "GET"
          ],
          "pathPattern": "/circulation/requests/queue/{id}",
          "permissionsRequired": [
            "circulation.requests.queue.collection.get"
          ],
          "modulePermissions": [
            "circulation-storage.requests.item.get",
            "circulation-storage.requests.collection.get",
            "circulation-storage.loans.collection.get",
            "circulation-storage.loans.item.get",
            "inventory-storage.items.collection.get",
            "inventory-storage.items.item.get",
            "inventory-storage.holdings.collection.get",
            "inventory-storage.holdings.item.get",
            "inventory-storage.instances.collection.get",
            "inventory-storage.instances.item.get",
            "inventory-storage.locations.collection.get",
            "inventory-storage.locations.item.get",
            "inventory-storage.service-points.collection.get",
            "inventory-storage.service-points.item.get",
            "users.item.get",
            "users.collection.get",
            "usergroups.collection.get",
            "usergroups.item.get"
          ]
        }
      ]
    }
  ],
  "requires": [
    {
      "id": "loan-storage",
      "version": "5.3"
    },
    {
      "id": "circulation-rules-storage",
      "version": "1.0"
    },
    {
      "id": "item-storage",
      "version": "6.1 7.0"
    },
    {
      "id": "instance-storage",
      "version": "4.0 5.0 6.0"
    },
    {
      "id": "holdings-storage",
      "version": "1.3 2.0 3.0"
    },
    {
      "id": "request-storage",
      "version": "2.5"
    },
    {
      "id": "users",
      "version": "14.2 15.0"
    },
    {
      "id": "locations",
      "version": "3.0"
    },
    {
      "id": "material-types",
      "version": "2.0"
    },
    {
      "id": "loan-policy-storage",
      "version": "1.2 2.0"
    },
    {
      "id": "fixed-due-date-schedules-storage",
      "version": "2.0"
    },
    {
      "id": "service-points",
      "version": "3.0"
    },
    {
      "id": "calendar",
      "version": "2.0"
    }
  ],
  "permissionSets": [
    {
      "permissionName": "circulation.check-out-by-barcode.post",
      "displayName": "circulation - check out item by barcode",
      "description": "check out an item using barcodes for item and loanee"
    },
    {
      "permissionName": "circulation.check-in-by-barcode.post",
      "displayName": "circulation - checkin loan by barcode",
      "description": "checkin a loan using barcodes for item and loanee"
    },
    {
      "permissionName": "circulation.renew-by-barcode.post",
      "displayName": "circulation - renew loan by barcode",
      "description": "renew a loan using barcodes for item and loanee"
    },
    {
      "permissionName": "circulation.renew-by-id.post",
      "displayName": "circulation - renew loan using id",
      "description": "renew a loan using IDs for item and loanee"
    },
    {
      "permissionName": "circulation.override-renewal-by-barcode.post",
      "displayName": "circulation - override renewal by barcode",
      "description": "override renewal using barcodes for item and loanee"
    },
    {
      "permissionName": "circulation.loans.collection.get",
      "displayName": "circulation - get loan collection",
      "description": "get loan collection"
    },
    {
      "permissionName": "circulation.loans.collection.delete",
      "displayName": "circulation - delete entire loan collection",
      "description": "delete entire loan collection"
    },
    {
      "permissionName": "circulation.loans.item.get",
      "displayName": "circulation - get individual loan",
      "description": "get individual loan"
    },
    {
      "permissionName": "circulation.loans.item.post",
      "displayName": "circulation - create individual loan",
      "description": "create individual loan"
    },
    {
      "permissionName": "circulation.loans.item.put",
      "displayName": "circulation - modify loan",
      "description": "modify individual loan"
    },
    {
      "permissionName": "circulation.loans.item.delete",
      "displayName": "circulation - delete individual loan",
      "description": "delete individual loan"
    },
    {
      "permissionName": "circulation.rules.get",
      "displayName": "Circulation - get circulation rules",
      "description": "Get circulation rules"
    },
    {
      "permissionName": "circulation.rules.put",
      "displayName": "Circulation - modify circulation rules",
      "description": "Modify circulation rules"
    },
    {
      "permissionName": "circulation.rules.loan-policy.get",
      "displayName": "Circulation - use circulation rules to get matching loan policy",
      "description": "Apply circulation rules to get matching loan policy"
    },
    {
      "permissionName": "circulation.rules.loan-policy-all.get",
      "displayName": "Circulation - use circulation rules to get all matching loan policies",
      "description": "Apply circulation rules to get all matching loan policies"
    },
    {
      "permissionName": "circulation.requests.collection.get",
      "displayName": "circulation - get request collection",
      "description": "get request collection"
    },
    {
      "permissionName": "circulation.requests.collection.delete",
      "displayName": "circulation - delete entire request collection",
      "description": "delete entire request collection"
    },
    {
      "permissionName": "circulation.requests.item.get",
      "displayName": "circulation - get individual request",
      "description": "get individual request"
    },
    {
      "permissionName": "circulation.requests.item.post",
      "displayName": "circulation - create individual requests",
      "description": "create individual request"
    },
    {
      "permissionName": "circulation.requests.item.put",
      "displayName": "circulation - modify request",
      "description": "modify individual request"
    },
    {
      "permissionName": "circulation.requests.item.delete",
      "displayName": "circulation - delete individual request",
      "description": "delete individual request"
    },
    {
      "permissionName": "circulation.requests.queue.collection.get",
      "displayName": "circulation - request queue for an item",
      "description": "get request queue for an item"
    },
    {
      "permissionName": "circulation.all",
      "displayName": "circulation - all permissions",
      "description": "Entire set of permissions needed to use the circulation",
      "subPermissions": [
        "circulation.check-out-by-barcode.post",
        "circulation.check-in-by-barcode.post",
        "circulation.renew-by-barcode.post",
        "circulation.renew-by-id.post",
        "circulation.override-renewal-by-barcode.post",
        "circulation.loans.collection.get",
        "circulation.loans.item.get",
        "circulation.loans.item.post",
        "circulation.loans.item.put",
        "circulation.loans.item.delete",
        "circulation.loans.collection.delete",
        "circulation.rules.put",
        "circulation.rules.get",
        "circulation.rules.loan-policy.get",
        "circulation.rules.loan-policy-all.get",
        "circulation.requests.collection.get",
        "circulation.requests.item.get",
        "circulation.requests.item.post",
        "circulation.requests.item.put",
        "circulation.requests.item.delete",
        "circulation.requests.collection.delete",
        "circulation.requests.queue.collection.get"
      ]
    }
  ],
  "launchDescriptor": {
    "dockerImage": "${artifactId}:${version}",
    "dockerArgs": {
      "HostConfig": { "PortBindings": { "9801/tcp":  [{ "HostPort": "%p" }] } }
    },
    "dockerPull" : false
  }
}
