apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'jacoco'

apply plugin: 'org.sonarqube'

sonarqube {
  properties {
    
    /*
     * sonar.host.url property should be set up as a global gradle property on the sonarqube server 
     * or the line below should be commented out and updated with correct url */  
      
    //property 'sonar.host.url', 'http://localhost:9000' 
      property "sonar.jacoco.reportPaths", "${project.buildDir}/jacoco/test.exec"
  }
}

mainClassName = "org.folio.circulation.Launcher"
project.ext.artifactId = "mod-circulation"
version = "4.5.0-SNAPSHOT"

ext.sharedManifest = manifest {
  attributes(
    "Main-Class": mainClassName,
    "Implementation-Title": project.properties['artifactId'],
    "Implementation-Version": version)
}

buildscript {
  ext {
    sonarGradlePluginVersion = '2.5'
}
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.5"
  }
}

repositories {
  mavenCentral()
}

def vertxVersion = '3.4.2'
def droolsVersion = '7.0.0.Final'

dependencies {
  // Logging: SLF4J + logback
  compile "ch.qos.logback:logback-classic:1.1.5"
  //Don't use the code gen directly but hoping to get rid of warnings in build
  compile "io.vertx:vertx-codegen:$vertxVersion"
  compile "io.vertx:vertx-core:$vertxVersion"
  compile "io.vertx:vertx-web:$vertxVersion"
  compile 'org.apache.commons:commons-lang3:3.5'
  compile "org.apache.httpcomponents:httpclient-osgi:4.5.2"
  compile "org.drools:drools-core:$droolsVersion"
  compile "org.drools:drools-compiler:$droolsVersion"

  testCompile 'junit:junit:4.12'
  testCompile 'org.hamcrest:hamcrest-junit:2.0.0.0'
  testCompile 'joda-time:joda-time:2.9.7'
}

defaultTasks 'build', 'generateDescriptors'

compileJava {
  options.compilerArgs += ["-Xlint:all"]
}

compileTestJava {
  options.compilerArgs += ["-Xlint:all"]
}

test {
  //Gradle runs tests designed to be run in a suite twice
  //See: https://discuss.gradle.org/t/how-to-prevent-junit-test-suite-classes-from-being-ran-twice/7107/4
  exclude '**/api/**Tests.class'
}

task generateDescriptors(type: Copy) {
  from 'descriptors'
  into 'build'
  include('*Descriptor*-template.json')
  filteringCharset = 'UTF-8'
  expand(project.properties)
  rename { String fileName ->
    fileName.replace('-template', '')
  }
}

task testApiViaOkapi(type: Test) {
  include '**/api/APITestSuite.class'

  systemProperty 'use.okapi.initial.requests', 'true'
  systemProperty 'use.okapi.storage.requests', 'true'

  def okapiAddress = System.getProperty('okapi.address') ?: 'http://localhost:9130'

  systemProperty 'okapi.address', okapiAddress
}

task testStorageViaOkapi(type: Test) {
  include '**/api/APITestSuite.class'

  systemProperty 'use.okapi.initial.requests', 'false'
  systemProperty 'use.okapi.storage.requests', 'true'

  def okapiAddress = System.getProperty('okapi.address') ?: 'http://localhost:9130'

  systemProperty 'okapi.address', okapiAddress
}

jar {
  manifest = project.manifest {
    from sharedManifest
  }
}

task fatJar(type: Jar) {
  manifest = project.manifest {
    from sharedManifest
  }
  archiveName 'mod-circulation.jar'
  from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
  with jar
}

task wrapper(type: Wrapper) {
  gradleVersion = '3.3'
}
