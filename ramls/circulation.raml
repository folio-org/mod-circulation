#%RAML 1.0
title: Circulation
version: v6.0
protocols: [ HTTP, HTTPS ]
baseUri: http://localhost:9130

documentation:
  - title: Circulation Business Logic API
    content: <b>API for loans and requests</b>

types:
  loan: !include loan.json
  loans: !include loans.json
  request: !include request.json
  requests: !include requests.json
  check-in-by-barcode-response: !include check-in-by-barcode-response.json
  error: !include raml-util/schemas/error.schema
  errors: !include raml-util/schemas/errors.schema

traits:
  language: !include raml-util/traits/language.raml
  pageable: !include raml-util/traits/pageable.raml
  searchable: !include raml-util/traits/searchable.raml
  validate: !include raml-util/traits/validation.raml

resourceTypes:
  collection: !include raml-util/rtypes/collection.raml
  collection-get: !include raml-util/rtypes/collection-get.raml
  collection-item: !include raml-util/rtypes/item-collection.raml

/circulation:
  /check-out-by-barcode:
    displayName: Check out using barcode for item and loanee
    post:
      description: Creates a loan by checking out an item to a loanee
      is: [
        language,
        validate
      ]
      body:
        application/json:
          type: !include check-out-by-barcode-request.json
          example: !include examples/check-out-by-barcode-request.json
      responses:
        201:
          body:
            application/json:
              type: loan
              example: !include examples/loan.json
        500:
          description: "Internal server error"
          body:
            text/plain:
              example: "Internal server error"
  /renew-by-barcode:
    displayName: Renew an existing loan using barcode for item and loanee
    post:
      description: Updates the due date of an existing loan
      is: [
        language,
        validate
      ]
      body:
        application/json:
          type: !include renew-by-barcode-request.json
          example: !include examples/renew-by-barcode-request.json
      responses:
        200:
          body:
            application/json:
              type: loan
              example: !include examples/loan.json
        201:
          body:
            application/json:
              type: loan
              example: !include examples/loan.json
        500:
          description: "Internal server error"
          body:
            text/plain:
              example: "Internal server error"
  /renew-by-id:
    displayName: Renew an existing loan using IDs of the item and loanee
    post:
      description: Updates the due date of an existing loan
      is: [
        language,
        validate
      ]
      body:
        application/json:
          type: !include renew-by-id-request.json
          example: !include examples/renew-by-id-request.json
      responses:
        200:
          body:
            application/json:
              type: loan
              example: !include examples/loan.json
        201:
          body:
            application/json:
              type: loan
              example: !include examples/loan.json
        500:
          description: "Internal server error"
          body:
            text/plain:
              example: "Internal server error"
  /circulation/override-renewal-by-barcode:
    displayName: Override renewal of an existing loan using barcode for item and loanee
    post:
      description: Updates the due date of an existing loan
      is: [
        language,
        validate
      ]
      body:
        application/json:
          type: !include override-renewal-by-barcode-request.json
          example: !include examples/override-renewal-by-barcode-request.json
      responses:
        200:
          body:
            application/json:
              type: loan
              example: !include examples/loan.json
        201:
          body:
            application/json:
              type: loan
              example: !include examples/loan.json
        500:
          description: "Internal server error"
          body:
            text/plain:
              example: "Internal server error"
  /check-in-by-barcode:
    displayName: Checkin an existing loan using barcode for item and loanee
    post:
      description: Updates the status of an existing loan
      is: [
        language,
        validate
      ]
      body:
        application/json:
          type: !include check-in-by-barcode-request.json
          example: !include examples/check-in-by-barcode-request.json
      responses:
        200:
          body:
            application/json:
              type: check-in-by-barcode-response
              example: !include examples/check-in-by-barcode-response.json
        500:
          description: "Internal server error"
          body:
            text/plain:
              example: "Internal server error"
  /loans:
    displayName: Loans
    type:
      collection:
        exampleCollection: !include examples/loans.json
        exampleItem: !include examples/loan.json
        schemaCollection: loans
        schemaItem: loan
    get:
      is: [
        pageable,
        searchable: {description: "by title (using CQL)",
                        example: "userId=\"cf23adf0-61ba-4887-bf82-956c4aae2260\""}
      ]
      responses:
        501:
          description: "Not implemented yet"
    post:
    delete:
      responses:
        204:
          description: "All loans deleted"
        500:
          description: "Internal server error, e.g. due to misconfiguration"
          body:
            text/plain:
              example: "Internal server error, contact administrator"
    /{loanId}:
      type:
        collection-item:
          exampleItem: !include examples/loan.json
          schema: loan
      get:
        responses:
          501:
            description: "Not implemented yet"
      put:
        responses:
          501:
            description: "Not implemented yet"
      delete:
        responses:
          501:
            description: "Not implemented yet"
  /rules:
    displayName: Circulation rules
    get:
      description: Get the circulation rules
      responses:
        200:
          body:
            application/json:
              type: !include schema/circulation-rules.json
              example: !include examples/circulation-rules.json
        500:
          description: "Internal server error"
          body:
            text/plain:
              example: "Internal server error"
    put:
      description: Set the circulation rules using a text file
      body:
        application/json:
          type: !include schema/circulation-rules.json
          example: !include examples/circulation-rules.json
      responses:
        204:
          description: "Circulation rules have been saved."
        422:
          description: "Validation error in the text file."
          body:
            application/json:
              type: !include schema/circulation-rules-error.json
              example: !include examples/circulation-rules-error.json
        500:
          description: "Internal server error"
          body:
            text/plain:
              example: "Internal server error"
    /loan-policy:
      displayName: Apply circulation rules for loan policy
      get:
        description: Get the loan policy when applying circulation rules
        queryParameters:
          item_type_id:
            description: "Item type id"
            pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[1-5][a-fA-F0-9]{3}-[89abAB][a-fA-F0-9]{3}-[a-fA-F0-9]{12}$"
            required: true
          loan_type_id:
            description: "Loan type id"
            pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[1-5][a-fA-F0-9]{3}-[89abAB][a-fA-F0-9]{3}-[a-fA-F0-9]{12}$"
            required: true
          patron_type_id:
            description: "Patron type id"
            pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[1-5][a-fA-F0-9]{3}-[89abAB][a-fA-F0-9]{3}-[a-fA-F0-9]{12}$"
            required: true
          shelving_location_id:
            description: "Shelving location id"
            pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[1-5][a-fA-F0-9]{3}-[89abAB][a-fA-F0-9]{3}-[a-fA-F0-9]{12}$"
            required: true
        responses:
          200:
            body:
              application/json:
                type: !include schema/loan-policy-id.json
                example: !include examples/loan-policy-id.json
          400:
            description: "Invalid query parameters"
            body:
              text/plain:
                example: "required query parameter missing: item_type_id"
          422:
            description: "Invalid id error."
            body:
              application/json:
                type: error
                example: !include examples/circulation-rules-id-error.json
          500:
            description: "Internal server error"
            body:
              text/plain:
                example: "Internal server error"
    /loan-policy-all:
      displayName: Apply circulation rules and return all matching loan policies
      get:
        description: Get loan circulation and loan policy for each match when applying circulation rules
        queryParameters:
          item_type_id:
            description: "Item type id"
            pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[1-5][a-fA-F0-9]{3}-[89abAB][a-fA-F0-9]{3}-[a-fA-F0-9]{12}$"
            required: true
          loan_type_id:
            description: "Loan type id"
            pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[1-5][a-fA-F0-9]{3}-[89abAB][a-fA-F0-9]{3}-[a-fA-F0-9]{12}$"
            required: true
          patron_type_id:
            description: "Patron type id"
            pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[1-5][a-fA-F0-9]{3}-[89abAB][a-fA-F0-9]{3}-[a-fA-F0-9]{12}$"
            required: true
          shelving_location_id:
            description: "Shelving location id"
            pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[1-5][a-fA-F0-9]{3}-[89abAB][a-fA-F0-9]{3}-[a-fA-F0-9]{12}$"
            required: true
          rules:
            description: "Circulation rules if provided, otherwise use stored circulation rules"
            required: false
        responses:
          200:
            body:
              application/json:
                type: !include schema/circulation-rule-matches.json
                example: !include examples/circulation-rule-matches.json
          422:
            description: "Invalid id error."
            body:
              application/json:
                type: error
                example: !include examples/circulation-rules-id-error.json
          500:
            description: "Internal server error"
            body:
              text/plain:
                example: "Internal server error"
  /requests:
    displayName: Requests
    type:
      collection:
        exampleCollection: !include examples/requests.json
        exampleItem: !include examples/request.json
        schemaCollection: requests
        schemaItem: request
    get:
      is: [pageable,
        searchable: {description: "by using CQL",
                        example: "requesterId=\"cf23adf0-61ba-4887-bf82-956c4aae2260\""}
        ]
      responses:
        501:
          description: "Not implemented yet"
    post:
      responses:
        501:
          description: "Not implemented yet"
    delete:
      responses:
        204:
          description: "All requests deleted"
        500:
          description: "Internal server error, e.g. due to misconfiguration"
          body:
            text/plain:
              example: "Internal server error, contact administrator"
        501:
          description: "Not implemented yet"
    /{requestId}:
      type:
        collection-item:
          exampleItem: !include examples/request.json
          schema: request
      get:
        responses:
          501:
            description: "Not implemented yet"
      put:
        responses:
          501:
            description: "Not implemented yet"
      delete:
        responses:
          501:
            description: "Not implemented yet"
    /queue:
      /{itemId}:
        type:
          collection-get:
            exampleCollection: !include examples/request-queue.json
            schemaCollection: requests
        get:
